name: Test and Publish

on:
  - push
  - pull_request

jobs:
  test-code:
    name: Test code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[tests] tox-gh-actions
          pip install .[examples]

      - name: Test with Tox
        run: tox

  publish-to-test-pypi:
    name: Publish to TestPyPI
    environment: staging
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs:
      - test-code

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload --repository testpypi dist/*

  publish-to-pypi:
    name: Publish to PyPI
    environment: production
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: publish-to-test-pypi

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
