name: Test and Publish

on:
  push:

  pull_request:
    branches: [ 'develop' ]

jobs:
  is-duplicate:
    name: Is Duplicate
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip-check.outputs.should_skip }}
    permissions:
      actions: write
      contents: read

    steps:
      - id: skip-check
        name: Skip Check
        uses: fkirc/skip-duplicate-actions@master
        with:
          paths_ignore: '["**.rst", "**.md", "**.txt"]'

  test-code:
    name: Test code
    runs-on: ${{ matrix.os }}
    needs: is-duplicate
    if: needs.is-duplicate.outputs.should_skip != 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Test with Tox
        run: tox

  build-wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    needs: test-code
    if: |
      !failure() &&
      (
        startsWith(github.ref, 'refs/heads/develop') ||
        (
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags/v')
        )
      )
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3

      - name: Upload artefacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: dist-packages
          path: wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    needs: test-code
    if: |
      !failure() &&
      (
        startsWith(github.ref, 'refs/heads/develop') ||
        (
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags/v')
        )
      )

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build sdist
        run: |
          pipx run build --sdist
          pipx run twine check dist/*

      - name: Upload artefacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: dist-packages
          path: dist/*.tar.gz

  publish-to-test-pypi:
    name: Publish to TestPyPI
    environment: staging
    runs-on: ubuntu-latest
    needs: [build-sdist, build-wheels]
    if: |
      !failure() &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
          name: dist-packages
          path: dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.PYPI_API_TOKEN }}
          print-hash: true

  publish-to-pypi:
    name: Publish to PyPI
    environment: production
    runs-on: ubuntu-latest
    needs: [publish-to-test-pypi]
    if: |
      !failure() &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
          name: dist-packages
          path: dist

      - name: Publish to test PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          print-hash: true
